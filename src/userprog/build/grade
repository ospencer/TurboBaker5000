TOTAL TESTING SCORE: 78.8%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY BY TEST SET

Test Set                                      Pts Max  % Ttl  % Max
--------------------------------------------- --- --- ------ ------
tests/userprog/Rubric.functionality            99/108  32.1%/ 35.0%
tests/userprog/Rubric.robustness               87/ 88  24.7%/ 25.0%
tests/userprog/no-vm/Rubric                     0/  1   0.0%/ 10.0%
tests/filesys/base/Rubric                      22/ 30  22.0%/ 30.0%
--------------------------------------------- --- --- ------ ------
Total                                                  78.8%/100.0%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY OF INDIVIDUAL TESTS

Functionality of system calls (tests/userprog/Rubric.functionality):
	- Test argument passing on Pintos command line.
	     3/ 3 tests/userprog/args-none
	     3/ 3 tests/userprog/args-single
	     3/ 3 tests/userprog/args-multiple
	     3/ 3 tests/userprog/args-many
	     3/ 3 tests/userprog/args-dbl-space

	- Test "create" system call.
	     3/ 3 tests/userprog/create-empty
	     3/ 3 tests/userprog/create-long
	     3/ 3 tests/userprog/create-normal
	     3/ 3 tests/userprog/create-exists

	- Test "open" system call.
	     3/ 3 tests/userprog/open-missing
	     3/ 3 tests/userprog/open-normal
	     3/ 3 tests/userprog/open-twice

	- Test "read" system call.
	     3/ 3 tests/userprog/read-normal
	     3/ 3 tests/userprog/read-zero

	- Test "write" system call.
	     3/ 3 tests/userprog/write-normal
	     3/ 3 tests/userprog/write-zero

	- Test "close" system call.
	     3/ 3 tests/userprog/close-normal

	- Test "exec" system call.
	     5/ 5 tests/userprog/exec-once
	     5/ 5 tests/userprog/exec-multiple
	     5/ 5 tests/userprog/exec-arg

	- Test "wait" system call.
	     5/ 5 tests/userprog/wait-simple
	     5/ 5 tests/userprog/wait-twice

	- Test "exit" system call.
	     5/ 5 tests/userprog/exit

	- Test "halt" system call.
	     3/ 3 tests/userprog/halt

	- Test recursive execution of user programs.
	    15/15 tests/userprog/multi-recurse

	- Test read-only executable feature.
	  ** 0/ 3 tests/userprog/rox-simple
	  ** 0/ 3 tests/userprog/rox-child
	  ** 0/ 3 tests/userprog/rox-multichild

	- Section summary.
	     25/ 28 tests passed
	     99/108 points subtotal

Robustness of system calls (tests/userprog/Rubric.robustness):
	- Test robustness of file descriptor handling.
	     2/ 2 tests/userprog/close-stdin
	     2/ 2 tests/userprog/close-stdout
	     2/ 2 tests/userprog/close-bad-fd
	     2/ 2 tests/userprog/close-twice
	     2/ 2 tests/userprog/read-bad-fd
	     2/ 2 tests/userprog/read-stdout
	     2/ 2 tests/userprog/write-bad-fd
	     2/ 2 tests/userprog/write-stdin
	     2/ 2 tests/userprog/multi-child-fd

	- Test robustness of pointer handling.
	     3/ 3 tests/userprog/create-bad-ptr
	     3/ 3 tests/userprog/exec-bad-ptr
	     3/ 3 tests/userprog/open-bad-ptr
	     3/ 3 tests/userprog/read-bad-ptr
	     3/ 3 tests/userprog/write-bad-ptr

	- Test robustness of buffer copying across page boundaries.
	     3/ 3 tests/userprog/create-bound
	     3/ 3 tests/userprog/open-boundary
	     3/ 3 tests/userprog/read-boundary
	     3/ 3 tests/userprog/write-boundary

	- Test handling of null pointer and empty strings.
	     2/ 2 tests/userprog/create-null
	     2/ 2 tests/userprog/open-null
	     2/ 2 tests/userprog/open-empty

	- Test robustness of system call implementation.
	     3/ 3 tests/userprog/sc-bad-arg
	     3/ 3 tests/userprog/sc-bad-sp
	     5/ 5 tests/userprog/sc-boundary
	     5/ 5 tests/userprog/sc-boundary-2

	- Test robustness of "exec" and "wait" system calls.
	     5/ 5 tests/userprog/exec-missing
	     5/ 5 tests/userprog/wait-bad-pid
	     5/ 5 tests/userprog/wait-killed

	- Test robustness of exception handling.
	     1/ 1 tests/userprog/bad-read
	  ** 0/ 1 tests/userprog/bad-write
	     1/ 1 tests/userprog/bad-jump
	     1/ 1 tests/userprog/bad-read2
	     1/ 1 tests/userprog/bad-write2
	     1/ 1 tests/userprog/bad-jump2

	- Section summary.
	     33/ 34 tests passed
	     87/ 88 points subtotal

Functionality of features that VM might break (tests/userprog/no-vm/Rubric):

	  ** 0/ 1 tests/userprog/no-vm/multi-oom

	- Section summary.
	      0/  1 tests passed
	      0/  1 points subtotal

Functionality of base file system (tests/filesys/base/Rubric):
	- Test basic support for small files.
	     1/ 1 tests/filesys/base/sm-create
	     2/ 2 tests/filesys/base/sm-full
	     2/ 2 tests/filesys/base/sm-random
	     2/ 2 tests/filesys/base/sm-seq-block
	     3/ 3 tests/filesys/base/sm-seq-random

	- Test basic support for large files.
	     1/ 1 tests/filesys/base/lg-create
	     2/ 2 tests/filesys/base/lg-full
	     2/ 2 tests/filesys/base/lg-random
	     2/ 2 tests/filesys/base/lg-seq-block
	     3/ 3 tests/filesys/base/lg-seq-random

	- Test synchronized multiprogram access to files.
	  ** 0/ 4 tests/filesys/base/syn-read
	  ** 0/ 4 tests/filesys/base/syn-write
	     2/ 2 tests/filesys/base/syn-remove

	- Section summary.
	     11/ 13 tests passed
	     22/ 30 points subtotal


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-simple FAILURE:

run: try to write "rox-simple": FAILED

OUTPUT FROM tests/userprog/rox-simple:

Copying tests/userprog/rox-simple to scratch partition...
qemu -hda /tmp/aVqivyrp6N.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run rox-simple
Pintos booting with 4,088 kB RAM...
382 pages available in kernel pool.
382 pages available in user pool.
Calibrating timer...  523,468,800 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 92 sectors (46 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-simple' into the file system...
Erasing ustar archive...
Executing 'rox-simple':
(rox-simple) begin
(rox-simple) open "rox-simple"
(rox-simple) read "rox-simple"
(rox-simple) try to write "rox-simple"
(rox-simple) try to write "rox-simple": FAILED
rox-simple: exit(1)
Execution of 'rox-simple' complete.
Timer: 58 ticks
Thread: 2 idle ticks, 56 kernel ticks, 0 user ticks
hda2 (filesys): 70 reads, 189 writes
hda3 (scratch): 91 reads, 2 writes
Console: 1021 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-child FAILURE:

run: try to write "child-rox": FAILED

OUTPUT FROM tests/userprog/rox-child:

Copying tests/userprog/rox-child to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
qemu -hda /tmp/Ua1KcYXe0n.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run rox-child
Pintos booting with 4,088 kB RAM...
382 pages available in kernel pool.
382 pages available in user pool.
Calibrating timer...  471,040,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 195 sectors (97 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-child' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-child':
(rox-child) begin
(rox-child) open "child-rox"
(rox-child) read "child-rox"
(rox-child) write "child-rox"
(rox-child) exec "child-rox 1"
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) try to write "child-rox": FAILED
child-rox: exit(1)
(rox-child) wait for child: FAILED
rox-child: exit(1)
Execution of 'rox-child' complete.
Timer: 67 ticks
Thread: 4 idle ticks, 61 kernel ticks, 2 user ticks
hda2 (filesys): 138 reads, 398 writes
hda3 (scratch): 194 reads, 2 writes
Console: 1187 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-multichild FAILURE:

run: try to write "child-rox": FAILED

OUTPUT FROM tests/userprog/rox-multichild:

Copying tests/userprog/rox-multichild to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
qemu -hda /tmp/MhAE7eZ04m.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run rox-multichild
Pintos booting with 4,088 kB RAM...
382 pages available in kernel pool.
382 pages available in user pool.
Calibrating timer...  471,040,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 195 sectors (97 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-multichild':
(rox-multichild) begin
(rox-multichild) open "child-rox"
(rox-multichild) read "child-rox"
(rox-multichild) write "child-rox"
(rox-multichild) exec "child-rox 5"
(child-rox) begin
(child-rox) try to write "child-rox"
(child-rox) try to write "child-rox": FAILED
child-rox: exit(1)
(rox-multichild) wait for child: FAILED
rox-multichild: exit(1)
Execution of 'rox-multichild' complete.
Timer: 67 ticks
Thread: 3 idle ticks, 62 kernel ticks, 2 user ticks
hda2 (filesys): 138 reads, 398 writes
hda3 (scratch): 194 reads, 2 writes
Console: 1242 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-write FAILURE:

run: should have exited with -1: FAILED

OUTPUT FROM tests/userprog/bad-write:

Copying tests/userprog/bad-write to scratch partition...
qemu -hda /tmp/EdpnNMgeQQ.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-write
Pintos booting with 4,088 kB RAM...
382 pages available in kernel pool.
382 pages available in user pool.
Calibrating timer...  523,468,800 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 91 sectors (45 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-write' into the file system...
Erasing ustar archive...
Executing 'bad-write':
(bad-write) begin
Page fault at 0: not present error writing page in user context.
Allocating new page...
Allocating page at 0
(bad-write) should have exited with -1: FAILED
bad-write: exit(1)
Execution of 'bad-write' complete.
Timer: 61 ticks
Thread: 1 idle ticks, 58 kernel ticks, 2 user ticks
hda2 (filesys): 63 reads, 186 writes
hda3 (scratch): 90 reads, 2 writes
Console: 1023 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/no-vm/multi-oom FAILURE:

run: crashed child should return -1.: FAILED

OUTPUT FROM tests/userprog/no-vm/multi-oom:

Copying tests/userprog/no-vm/multi-oom to scratch partition...
qemu -hda /tmp/mHCASU5XIg.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run multi-oom
Pintos booting with 4,088 kB RAM...
382 pages available in kernel pool.
382 pages available in user pool.
Calibrating timer...  523,468,800 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-oom' into the file system...
Erasing ustar archive...
Executing 'multi-oom':
(multi-oom) begin
multi-oom: exit(-1)
multi-oom: exit(-1)
multi-oom: exit(-1)
multi-oom: exit(-1)
Page fault at 0xc0000000: rights violation error reading page in user context.
multi-oom: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x8048106
 cr2=c0000000 error=00000005
 eax=2172beca ebx=00000015 ecx=00000005 edx=00000002
 esi=00000003 edi=00000000 esp=bfffff50 ebp=bfffffb0
 cs=001b ds=0023 es=0023 ss=0023
multi-oom: exit(-1)
multi-oom: exit(-1)
multi-oom: exit(-1)
Page fault at 0xc0000000: rights violation error reading page in user context.
multi-oom: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x8048106
 cr2=c0000000 error=00000005
 eax=03b45a13 ebx=00000018 ecx=00000005 edx=00000002
 esi=00000003 edi=00000000 esp=bfffff50 ebp=bfffffb0
 cs=001b ds=0023 es=0023 ss=0023
multi-oom: exit(-1)
Page fault at 0: not present error writing page in user context.
Allocating new page...
Allocating page at 0
User process ABORT at ../../tests/userprog/no-vm/multi-oom.c:119 in main(): executed an unreachable statement
Call stack: 0x804a95c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
multi-oom: exit(1)
(multi-oom) crashed child should return -1.: FAILED
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(-1)
multi-oom: exit(-1)
multi-oom: exit(-1)
multi-oom: exit(-1)
Page fault at 0xc0000000: rights violation error reading page in user context.
multi-oom: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x8048106
 cr2=c0000000 error=00000005
 eax=2172beca ebx=00000015 ecx=00000005 edx=00000002
 esi=00000003 edi=00000000 esp=bfffff50 ebp=bfffffb0
 cs=001b ds=0023 es=0023 ss=0023
multi-oom: exit(-1)
multi-oom: exit(-1)
multi-oom: exit(-1)
Page fault at 0xc0000000: rights violation error reading page in user context.
multi-oom: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x8048106
 cr2=c0000000 error=00000005
 eax=03b45a13 ebx=00000018 ecx=00000005 edx=00000002
 esi=00000003 edi=00000000 esp=bfffff50 ebp=bfffffb0
 cs=001b ds=0023 es=0023 ss=0023
multi-oom: exit(-1)
Page fault at 0: not present error writing page in user context.
Allocating new page...
Allocating page at 0
User process ABORT at ../../tests/userprog/no-vm/multi-oom.c:119 in main(): executed an unreachable statement
Call stack: 0x804a95c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
multi-oom: exit(1)
(multi-oom) crashed child should return -1.: FAILED
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
Page fault at 0x8: not present error reading page in user context.
multi-oom: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x8048963
 cr2=00000008 error=00000004
 eax=00000000 ebx=00000000 ecx=00000000 edx=00000000
 esi=00000000 edi=00000000 esp=ffffffe4 ebp=00000000
 cs=001b ds=0023 es=0023 ss=0023
multi-oom: exit(-1)
(multi-oom) wait returned -1.: FAILED
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(0)
multi-oom: exit(0)
multi-oom: exit(0)
multi-oom: exit(0)
multi-oom: exit(0)
multi-oom: exit(0)
(multi-oom) after run 3/10, expected depth 1, actual depth 0.: FAILED
multi-oom: exit(1)
Execution of 'multi-oom' complete.
Timer: 503 ticks
Thread: 139 idle ticks, 75 kernel ticks, 289 user ticks
hda2 (filesys): 23708 reads, 218 writes
hda3 (scratch): 106 reads, 2 writes
Console: 5366 characters output
Keyboard: 0 keys pressed
Exception: 7 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-read FAILURE:

run: wait for child 1 of 10 returned -1 (expected 0): FAILED

OUTPUT FROM tests/filesys/base/syn-read:

Copying tests/filesys/base/syn-read to scratch partition...
Copying tests/filesys/base/child-syn-read to scratch partition...
qemu -hda /tmp/hvLsEa36KW.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run syn-read
Pintos booting with 4,088 kB RAM...
382 pages available in kernel pool.
382 pages available in user pool.
Calibrating timer...  523,468,800 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 200 sectors (100 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-read' into the file system...
Putting 'child-syn-read' into the file system...
Erasing ustar archive...
Executing 'syn-read':
(syn-read) begin
(syn-read) create "data"
(syn-read) open "data"
(syn-read) write "data"
(syn-read) close "data"
(syn-read) exec child 1 of 10: "child-syn-read 0"
(syn-read) exec child 2 of 10: "child-syn-read 1"
load: child-syn-read: open failed
(syn-read) exec child 3 of 10: "child-syn-read 2"
load: child-syn-read: open failed
(syn-read) exec child 4 of 10: "child-syn-read 3"
load: child-syn-read: open failed
(syn-read) exec child 5 of 10: "child-syn-read 4"
load: child-syn-read: open failed
(syn-read) exec child 6 of 10: "child-syn-read 5"
load: child-syn-read: open failed
(syn-read) exec child 7 of 10: "child-syn-read 6"
load: child-syn-read: open failed
(syn-read) exec child 8 of 10: "child-syn-read 7"
load: child-syn-read: open failed
(syn-read) exec child 9 of 10: "child-syn-read 8"
load: child-syn-read: open failed
(syn-read) exec child 10 of 10: "child-syn-read 9"
load: child-syn-read: open failed
(syn-read) wait for child 1 of 10 returned -1 (expected 0)
(syn-read) wait for child 1 of 10 returned -1 (expected 0): FAILED
syn-read: exit(1)
Execution of 'syn-read' complete.
Timer: 66 ticks
Thread: 4 idle ticks, 58 kernel ticks, 4 user ticks
hda2 (filesys): 141 reads, 414 writes
hda3 (scratch): 199 reads, 2 writes
Console: 1943 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-write FAILURE:

run: wait for child 1 of 10 returned -1 (expected 0): FAILED

OUTPUT FROM tests/filesys/base/syn-write:

Copying tests/filesys/base/syn-write to scratch partition...
Copying tests/filesys/base/child-syn-wrt to scratch partition...
qemu -hda /tmp/MRA229fSsP.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run syn-write
Pintos booting with 4,088 kB RAM...
382 pages available in kernel pool.
382 pages available in user pool.
Calibrating timer...  471,040,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 175 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 199 sectors (99 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Erasing ustar archive...
Executing 'syn-write':
(syn-write) begin
(syn-write) create "stuff"
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
(syn-write) exec child 2 of 10: "child-syn-wrt 1"
load: child-syn-wrt: open failed
(syn-write) exec child 3 of 10: "child-syn-wrt 2"
load: child-syn-wrt: open failed
(syn-write) exec child 4 of 10: "child-syn-wrt 3"
load: child-syn-wrt: open failed
(syn-write) exec child 5 of 10: "child-syn-wrt 4"
load: child-syn-wrt: open failed
(syn-write) exec child 6 of 10: "child-syn-wrt 5"
load: child-syn-wrt: open failed
(syn-write) exec child 7 of 10: "child-syn-wrt 6"
load: child-syn-wrt: open failed
(syn-write) exec child 8 of 10: "child-syn-wrt 7"
load: child-syn-wrt: open failed
(syn-write) exec child 9 of 10: "child-syn-wrt 8"
load: child-syn-wrt: open failed
(syn-write) exec child 10 of 10: "child-syn-wrt 9"
load: child-syn-wrt: open failed
(syn-write) wait for child 1 of 10 returned -1 (expected 0)
(syn-write) wait for child 1 of 10 returned -1 (expected 0): FAILED
syn-write: exit(1)
Execution of 'syn-write' complete.
Timer: 73 ticks
Thread: 7 idle ticks, 62 kernel ticks, 4 user ticks
hda2 (filesys): 136 reads, 418 writes
hda3 (scratch): 198 reads, 2 writes
Console: 1871 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
