Copying tests/userprog/read-bad-ptr to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/XIZs9FQ7NR.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-bad-ptr
Pintos booting with 4,088 kB RAM...
382 pages available in kernel pool.
382 pages available in user pool.
Calibrating timer...  471,040,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 94 sectors (47 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-bad-ptr':
(read-bad-ptr) begin
(read-bad-ptr) open "sample.txt"
(read-bad-ptr) should not have survived read(): FAILED
read-bad-ptr: exit(1)
Page fault at 0x676e69a6: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002956b
 cr2=676e69a6 error=00000000
 eax=676e697a ebx=80000000 ecx=0000017f edx=0000000b
 esi=c0100000 edi=0000017f esp=00000795 ebp=00000001
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:101 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002867e 0xc002956b.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 60 ticks
Thread: 0 idle ticks, 60 kernel ticks, 0 user ticks
hda2 (filesys): 93 reads, 194 writes
hda3 (scratch): 93 reads, 2 writes
Console: 1575 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
